{"version":3,"sources":["services/token-service.js","services/idle-service.js","config.js","services/auth-api-service.js","contexts/UserContext.js","components/Header/Header.js","components/PrivateRoute/PrivateRoute.js","components/PublicOnlyRoute/PublicOnlyRoute.js","components/Form/Form.js","components/Button/Button.js","components/RegistrationForm/RegistrationForm.js","routes/RegistrationRoute/RegistrationRoute.js","components/LoginForm/LoginForm.js","routes/LoginRoute/LoginRoute.js","services/language-service.js","contexts/languageContext.js","routes/DashboardRoute/DashboardRoute.js","components/Results/Results.js","routes/LearningRoute/LearningRoute.js","routes/NotFoundRoute/NotFoundRoute.js","components/App/App.js","serviceWorker.js","index.js"],"names":["_timeoutId","config","process","TokenService","saveAuthToken","token","window","localStorage","setItem","getAuthToken","getItem","clearAuthToken","removeItem","hasAuthToken","parseJwt","jwt","jwtDecode","parseAuthToken","authToken","_getMsUntilExpiry","payload","exp","Date","now","queueCallbackBeforeExpiry","callback","msUntilExpiry","setTimeout","clearCallbackBeforeExpiry","clearTimeout","AuthApiService","postUser","user","fetch","concat","method","headers","content-type","body","JSON","stringify","then","res","ok","json","e","Promise","reject","postLogin","_ref","username","password","err","refreshToken","authorization","_idleCallback","_notIdleEvents","IdleService","setIdleCallback","idleCallback","resetIdleTimer","ev","regiserIdleTimerResets","forEach","event","document","addEventListener","unRegisterIdleResets","removeEventListener","UserContext","React","createContext","error","setError","clearError","setUser","processLogin","processLogout","UserProvider","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","setState","jwtPayload","id","user_id","name","sub","fetchRefreshToken","logoutBecauseIdle","idle","catch","state","inherits","createClass","key","value","_this2","react_default","a","createElement","Provider","children","Component","Header","handleLogoutClick","context","className","Link","to","onClick","renderLogoutLink","renderLoginLink","contextType","PrivateRoute","component","objectWithoutProperties","Route","assign","render","componentProps","contexts_UserContext","Consumer","userContext","Redirect","pathname","from","location","PublicOnlyRoute","Label","cx","Input","forwardRef","_ref2","ref","type","Required","_ref3","Button","RegistrationForm","firstInput","createRef","handleSubmit","preventDefault","_ev$target","target","onRegistrationSuccess","current","focus","onSubmit","role","htmlFor","required","components_Button_Button","defaultProps","RegistrationRoute","handleRegistrationSuccess","history","push","components_RegistrationForm_RegistrationForm","LoginForm","onLoginSuccess","LoginRoute","handleLoginSuccess","_this$props","destination","components_LoginForm_LoginForm","LanguageApiService","getWords","Authorization","getHead","postGuess","guess","getLanguages","languageContext","language","words","setLanguage","setWords","DashboardRoute","LanguageService","setLangAndWords","total_score","map","word","index","original","correct_count","incorrect_count","Results","isCorrect","answer","onNextWordClick","SpeechSynthesisUtterance","text","recognition","SpeechRecognition","webkitSpeechRecognition","lang","LearningRoute","handleSpeech","guessTerm","listening","start","onresult","resultIndex","transcript","results","toLowerCase","handleSendGuess","guessBody","summary","newCorrectScore","wordCorrectCount","newIncorrectScore","wordIncorrectCount","totalScore","wordIncorrect","wordCorrect","guessBool","setAnswer","val","handleNextWord","head","nextWord","loading","speechBool","_this3","headerText","Fragment","onChange","components_Results_Results","NotFoundRoute","App","hasError","contexts_languageContext","components_Header_Header","Switch","exact","path","Boolean","hostname","match","ReactDOM","BrowserRouter","UserContext_UserProvider","App_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c80671d.chunk.js","sourcesContent":["import jwtDecode from 'jwt-decode'\r\nimport config from '../config'\r\n\r\nlet _timeoutId\r\nconst _TEN_SECONDS_IN_MS = 10000\r\n\r\nconst TokenService = {\r\n  saveAuthToken(token) {\r\n    window.localStorage.setItem(config.TOKEN_KEY, token)\r\n  },\r\n  getAuthToken() {\r\n    return window.localStorage.getItem(config.TOKEN_KEY)\r\n  },\r\n  clearAuthToken() {\r\n    window.localStorage.removeItem(config.TOKEN_KEY)\r\n  },\r\n  hasAuthToken() {\r\n    return !!TokenService.getAuthToken()\r\n  },\r\n  parseJwt(jwt) {\r\n    return jwtDecode(jwt)\r\n  },\r\n  parseAuthToken() {\r\n    const authToken = TokenService.getAuthToken()\r\n    if (authToken)\r\n      return TokenService.parseJwt(authToken)\r\n    else\r\n      return undefined\r\n  },\r\n  _getMsUntilExpiry(payload) {\r\n    return (payload.exp * 1000) - Date.now()\r\n  },\r\n  queueCallbackBeforeExpiry(callback) {\r\n    const msUntilExpiry = TokenService._getMsUntilExpiry(\r\n      TokenService.parseAuthToken()\r\n    )\r\n    _timeoutId = setTimeout(callback, msUntilExpiry - _TEN_SECONDS_IN_MS)\r\n  },\r\n  clearCallbackBeforeExpiry() {\r\n    clearTimeout(_timeoutId)\r\n  },\r\n}\r\n\r\nexport default TokenService\r\n","\r\nlet _timeoutId\r\nlet _idleCallback = null\r\nlet _notIdleEvents = [\r\n  'mousedown',\r\n  'mousemove',\r\n  'keypress',\r\n  'scroll',\r\n  'touchstart',\r\n]\r\nconst _FIVE_MINUTES_IN_MS = 5 * 60 * 1000\r\n\r\nconst IdleService = {\r\n  setIdleCallback(idleCallback) {\r\n    _idleCallback = idleCallback\r\n  },\r\n  resetIdleTimer(ev) {\r\n    clearTimeout(_timeoutId)\r\n    _timeoutId = setTimeout(_idleCallback, _FIVE_MINUTES_IN_MS)\r\n  },\r\n  regiserIdleTimerResets() {\r\n    _notIdleEvents.forEach(event =>\r\n      document.addEventListener(\r\n        event,\r\n        IdleService.resetIdleTimer,\r\n        true,\r\n      )\r\n    )\r\n  },\r\n  unRegisterIdleResets() {\r\n    clearTimeout(_timeoutId)\r\n    _notIdleEvents.forEach(event =>\r\n      document.removeEventListener(\r\n        event,\r\n        IdleService.resetIdleTimer,\r\n        true,\r\n      )\r\n    )\r\n  },\r\n}\r\n\r\nexport default IdleService\r\n","export default {\r\n  API_ENDPOINT: process.env.REACT_APP_API_ENDPOINT,\r\n  TOKEN_KEY: process.env.REACT_APP_TOKEN_KEY,\r\n}\r\n","import config from '../config'\r\nimport TokenService from './token-service'\r\n\r\nconst AuthApiService = {\r\n  postUser(user) {\r\n    return fetch(`${config.API_ENDPOINT}/user`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(user),\r\n    })\r\n      .then(res =>\r\n        (!res.ok)\r\n          ? res.json().then(e => Promise.reject(e))\r\n          : res.json()\r\n      )\r\n  },\r\n  postLogin({ username, password }) {\r\n    return fetch(`${config.API_ENDPOINT}/auth/token`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ username, password }),\r\n    })\r\n      .then(res =>\r\n        (!res.ok)\r\n          ? res.json().then(err => Promise.reject(err))\r\n          : res.json()\r\n      )\r\n  },\r\n  refreshToken() {\r\n    return fetch(`${config.API_ENDPOINT}/auth/token`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'authorization': `Bearer ${TokenService.getAuthToken()}`,\r\n      },\r\n    })\r\n      .then(res =>\r\n        (!res.ok)\r\n          ? res.json().then(e => Promise.reject(e))\r\n          : res.json()\r\n      )\r\n  },\r\n}\r\n\r\nexport default AuthApiService\r\n","import React, { Component } from 'react'\r\nimport AuthApiService from '../services/auth-api-service'\r\nimport TokenService from '../services/token-service'\r\nimport IdleService from '../services/idle-service'\r\n\r\nconst UserContext = React.createContext({\r\n  user: {},\r\n  error: null,\r\n  setError: () => {},\r\n  clearError: () => {},\r\n  setUser: () => {},\r\n  processLogin: () => {},\r\n  processLogout: () => {},\r\n})\r\n\r\nexport default UserContext\r\n\r\nexport class UserProvider extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    const state = { user: {}, error: null }\r\n\r\n    const jwtPayload = TokenService.parseAuthToken()\r\n\r\n    if (jwtPayload)\r\n      state.user = {\r\n        id: jwtPayload.user_id,\r\n        name: jwtPayload.name,\r\n        username: jwtPayload.sub,\r\n      }\r\n\r\n    this.state = state;\r\n    IdleService.setIdleCallback(this.logoutBecauseIdle)\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (TokenService.hasAuthToken()) {\r\n      IdleService.regiserIdleTimerResets()\r\n      TokenService.queueCallbackBeforeExpiry(() => {\r\n        this.fetchRefreshToken()\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    IdleService.unRegisterIdleResets()\r\n    TokenService.clearCallbackBeforeExpiry()\r\n  }\r\n\r\n  setError = error => {\r\n    console.error(error)\r\n    this.setState({ error })\r\n  }\r\n\r\n  clearError = () => {\r\n    this.setState({ error: null })\r\n  }\r\n\r\n  setUser = user => {\r\n    this.setState({ user })\r\n  }\r\n\r\n  processLogin = authToken => {\r\n    TokenService.saveAuthToken(authToken)\r\n    const jwtPayload = TokenService.parseAuthToken()\r\n    this.setUser({\r\n      id: jwtPayload.user_id,\r\n      name: jwtPayload.name,\r\n      username: jwtPayload.sub,\r\n    })\r\n    IdleService.regiserIdleTimerResets()\r\n    TokenService.queueCallbackBeforeExpiry(() => {\r\n      this.fetchRefreshToken()\r\n    })\r\n  }\r\n\r\n  processLogout = () => {\r\n    TokenService.clearAuthToken()\r\n    TokenService.clearCallbackBeforeExpiry()\r\n    IdleService.unRegisterIdleResets()\r\n    this.setUser({})\r\n  }\r\n\r\n  logoutBecauseIdle = () => {\r\n    TokenService.clearAuthToken()\r\n    TokenService.clearCallbackBeforeExpiry()\r\n    IdleService.unRegisterIdleResets()\r\n    this.setUser({ idle: true })\r\n  }\r\n\r\n  fetchRefreshToken = () => {\r\n    AuthApiService.refreshToken()\r\n      .then(res => {\r\n        TokenService.saveAuthToken(res.authToken)\r\n        TokenService.queueCallbackBeforeExpiry(() => {\r\n          this.fetchRefreshToken()\r\n        })\r\n      })\r\n      .catch(err => {\r\n        this.setError(err)\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const value = {\r\n      user: this.state.user,\r\n      error: this.state.error,\r\n      setError: this.setError,\r\n      clearError: this.clearError,\r\n      setUser: this.setUser,\r\n      processLogin: this.processLogin,\r\n      processLogout: this.processLogout,\r\n    }\r\n    return (\r\n      <UserContext.Provider value={value}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport TokenService from '../../services/token-service'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport './Header.css'\r\n\r\nclass Header extends Component {\r\n  static contextType = UserContext\r\n\r\n  handleLogoutClick = () => {\r\n    this.context.processLogout()\r\n  }\r\n\r\n  renderLoginLink() {\r\n    return (\r\n      <nav className='center'>\r\n        <Link className='nav-link' to='/login'>Login</Link>\r\n        {' '}\r\n        <Link className='nav-link' to='/register'>Sign up</Link>\r\n      </nav>\r\n    )\r\n  }\r\n  \r\n  renderLogoutLink() {\r\n    return (\r\n      <div className='logout'>\r\n        <span className='user'>\r\n          Welcome {this.context.user.name}!\r\n        </span>\r\n        <nav>\r\n          <Link className='nav-link center'\r\n            onClick={this.handleLogoutClick}\r\n            to='/login'>\r\n            Logout\r\n          </Link>\r\n        </nav>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <header className='Header center'>\r\n        <h1>\r\n          <Link to='/'>\r\n            Language Learner\r\n          </Link>\r\n        </h1>\r\n        {TokenService.hasAuthToken()\r\n          ? this.renderLogoutLink()\r\n          : this.renderLoginLink()}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport UserContext from '../../contexts/UserContext'\r\n\r\nexport default function PrivateRoute({ component, ...props }) {\r\n  const Component = component\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={componentProps => (\r\n        <UserContext.Consumer>\r\n          {userContext =>\r\n            !!userContext.user.id\r\n              ? <Component {...componentProps} />\r\n              : (\r\n                <Redirect\r\n                  to={{\r\n                    pathname: userContext.user.idle ? '/login' : '/register',\r\n                    state: { from: componentProps.location },\r\n                  }}\r\n                />\r\n              )\r\n          }\r\n        </UserContext.Consumer>\r\n      )}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport UserContext from '../../contexts/UserContext'\r\n\r\nexport default function PublicOnlyRoute({ component, ...props }) {\r\n  const Component = component\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={componentProps => (\r\n        <UserContext.Consumer>\r\n          {userContext =>\r\n            !!userContext.user.id\r\n              ? <Redirect to={'/'} />\r\n              : <Component {...componentProps} />\r\n          }\r\n        </UserContext.Consumer>\r\n      )}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport cx from 'classnames'\r\nimport './Form.css'\r\n\r\nexport function Label({ className, ...props }) {\r\n  return (\r\n    <label className={cx('Label', className)} {...props} />\r\n  )\r\n}\r\n\r\nexport const Input =  React.forwardRef(({ className, ...props }, ref) => {\r\n  return (\r\n    <input className={cx('Input', className)} type='text' ref={ref} {...props} />\r\n  )\r\n})\r\n\r\nexport function Required({ className, ...props }) {\r\n  return (\r\n    <span className={cx('Required', className)} {...props}>\r\n      &#42;\r\n    </span>\r\n  )\r\n}\r\n\r\nexport function Textarea({ className, ...props }) {\r\n  return (\r\n    <textarea className={cx('Textarea', className)} {...props} />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport cx from 'classnames'\r\nimport './Button.css'\r\n\r\nconst Button = React.forwardRef(({ className, ...props }, ref) => {\r\n  return (\r\n    <button className={cx('Button', className)} ref={ref} {...props} />\r\n  )\r\n})\r\n\r\nexport default Button\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Input, Required, Label } from '../Form/Form'\r\nimport AuthApiService from '../../services/auth-api-service'\r\nimport Button from '../Button/Button'\r\nimport './RegistrationForm.css'\r\n\r\nclass RegistrationForm extends Component {\r\n  static defaultProps = {\r\n    onRegistrationSuccess: () => { }\r\n  }\r\n\r\n  state = { error: null }\r\n\r\n  firstInput = React.createRef()\r\n\r\n  handleSubmit = ev => {\r\n    ev.preventDefault()\r\n    const { name, username, password } = ev.target\r\n    AuthApiService.postUser({\r\n      name: name.value,\r\n      username: username.value,\r\n      password: password.value,\r\n    })\r\n      .then(user => {\r\n        name.value = ''\r\n        username.value = ''\r\n        password.value = ''\r\n        this.props.onRegistrationSuccess()\r\n      })\r\n      .catch(res => {\r\n        this.setState({ error: res.error })\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.firstInput.current.focus()\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.state\r\n    return (\r\n      <form className='main-form center'\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <div role='alert'>\r\n          {error && <p>{error}</p>}\r\n        </div>\r\n        <div className='LoginItem center'>\r\n          <Label htmlFor='registration-name-input'>\r\n            Enter your name<Required />\r\n          </Label>\r\n          \r\n          <Input\r\n            ref={this.firstInput}\r\n            id='registration-name-input'\r\n            name='name'\r\n            required\r\n          />\r\n\r\n        </div>\r\n        <div className='LoginItem center'>\r\n          <Label htmlFor='registration-username-input'>\r\n            Choose a username<Required />\r\n          </Label>\r\n          \r\n          <Input\r\n            id='registration-username-input'\r\n            name='username'\r\n            required\r\n          />\r\n        \r\n        </div>\r\n        <div className='LoginItem center'>\r\n          <Label htmlFor='registration-password-input'>\r\n            Choose a password<Required />\r\n          </Label>\r\n          \r\n          <Input\r\n            id='registration-password-input'\r\n            name='password'\r\n            type='password'\r\n            required\r\n          />\r\n        \r\n        \r\n        </div>\r\n        <footer className='center'>\r\n          \r\n          <Button className='LoginItem center' type='submit'>\r\n            Sign up\r\n          </Button>\r\n          \r\n          {' '}\r\n          <Link to='/login'>Already have an account?</Link>\r\n        </footer>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RegistrationForm\r\n","import React, { Component } from 'react'\r\nimport RegistrationForm from '../../components/RegistrationForm/RegistrationForm'\r\n\r\nclass RegistrationRoute extends Component {\r\n  static defaultProps = {\r\n    history: {\r\n      push: () => {},\r\n    },\r\n  }\r\n\r\n  handleRegistrationSuccess = () => {\r\n    const { history } = this.props\r\n    history.push('/login')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section>\r\n        <p>\r\n          Practice learning a language with the spaced reptition revision technique.\r\n        </p>\r\n        <h2>Sign up</h2>\r\n        <RegistrationForm\r\n          onRegistrationSuccess={this.handleRegistrationSuccess}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegistrationRoute\r\n","import React, { Component } from 'react'\r\nimport { Input, Label } from '../Form/Form'\r\nimport AuthApiService from '../../services/auth-api-service'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport Button from '../Button/Button'\r\nimport './LoginForm.css'\r\n\r\nclass LoginForm extends Component {\r\n  static defaultProps = {\r\n    onLoginSuccess: () => { }\r\n  }\r\n\r\n  static contextType = UserContext\r\n\r\n  state = { error: null }\r\n\r\n  firstInput = React.createRef()\r\n\r\n  handleSubmit = ev => {\r\n    ev.preventDefault()\r\n    const { username, password } = ev.target\r\n\r\n    this.setState({ error: null })\r\n\r\n    AuthApiService.postLogin({\r\n      username: username.value,\r\n      password: password.value,\r\n    })\r\n      .then(res => {\r\n        username.value = ''\r\n        password.value = ''\r\n        this.context.processLogin(res.authToken)\r\n        this.props.onLoginSuccess()\r\n      })\r\n      .catch(res => {\r\n        this.setState({ error: res.error })\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.firstInput.current.focus()\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.state\r\n    return (\r\n      <form\r\n        className='main-form center'\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <div role='alert'>\r\n          {error && <p>{error}</p>}\r\n        </div>\r\n        <div className='LoginItem'>\r\n          <Label htmlFor='login-username-input'>\r\n            Username\r\n          </Label>\r\n          <Input\r\n            ref={this.firstInput}\r\n            id='login-username-input'\r\n            name='username'\r\n            required\r\n          />\r\n        </div>\r\n        <div className='LoginItem'>\r\n          <Label htmlFor='login-password-input'>\r\n            Password\r\n          </Label>\r\n          <Input\r\n            id='login-password-input'\r\n            name='password'\r\n            type='password'\r\n            required\r\n          />\r\n        </div>\r\n        <footer className='center'>\r\n        <Button className='LoginItem center' type='submit'>\r\n          Login\r\n        </Button>\r\n        </footer>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoginForm\r\n","import React, { Component } from 'react'\r\nimport LoginForm from '../../components/LoginForm/LoginForm'\r\n\r\nclass LoginRoute extends Component {\r\n  static defaultProps = {\r\n    location: {},\r\n    history: {\r\n      push: () => { },\r\n    },\r\n  }\r\n\r\n  handleLoginSuccess = () => {\r\n    const { location, history } = this.props\r\n    const destination = (location.state || {}).from || '/'\r\n    history.push(destination)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className='LoginRoute'>\r\n        <h2>Login</h2>\r\n        <LoginForm\r\n          onLoginSuccess={this.handleLoginSuccess}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginRoute\r\n","import TokenService from \"./token-service\";\r\nimport config from \"../config\";\r\n\r\nconst LanguageApiService = {\r\n  getWords() {\r\n    return fetch(`${config.API_ENDPOINT}/language`, {\r\n      headers: {\r\n        Authorization: `bearer ${TokenService.getAuthToken()}`,\r\n      },\r\n    }).then((res) =>\r\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\r\n    );\r\n  },\r\n  getHead() {\r\n    return fetch(`${config.API_ENDPOINT}/language/head`, {\r\n      headers: {\r\n        Authorization: `bearer ${TokenService.getAuthToken()}`,\r\n      },\r\n    }).then((res) =>\r\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\r\n    );\r\n  },\r\n  postGuess(guess) {\r\n    const guessStringify = JSON.stringify(guess);\r\n    return fetch(`${config.API_ENDPOINT}/language/guess`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `bearer ${TokenService.getAuthToken()}`,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(guess),\r\n    }).then((res) =>\r\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\r\n    );\r\n  },\r\n  getLanguages() {\r\n    return fetch(`${config.API_ENDPOINT}/user/listlanguages`, {\r\n      headers: {\r\n        Authorization: `bearer ${TokenService.getAuthToken()}`,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    }).then((res) =>\r\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\r\n    );\r\n  },\r\n};\r\n\r\nexport default LanguageApiService;","  \r\nimport React from \"react\";\r\n\r\nconst languageContext = React.createContext({\r\n    language: '',\r\n    words: [],\r\n    setLanguage: () => {},\r\n    setWords: () => {},\r\n});\r\n\r\nexport default languageContext;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LanguageService from \"../../services/language-service\";\r\nimport languageContext from \"../../contexts/languageContext\";\r\nimport './DashboardRoute.css';\r\n\r\nclass DashboardRoute extends Component {\r\n  state = {\r\n    error: null,\r\n  };\r\n\r\n  static contextType = languageContext;\r\n  componentDidMount() {\r\n    LanguageService.getWords()\r\n      .then((res) => {\r\n        this.context.setLangAndWords(res)})\r\n      .catch((error) => this.setState({ error: error }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"dashboard\">\r\n        <h2>Learn {this.context.language.name}!</h2>\r\n        <Link to=\"/learn\">\r\n          <button id=\"learn_button\" type=\"button\">Start practicing</button>\r\n        </Link>\r\n        \r\n        <p>Total correct: {this.context.language.total_score}</p>\r\n        <section className=\"word_list_box\">\r\n          <h3>Words to practice</h3>\r\n          <ul className=\"word_list\">\r\n            {this.context.words.map((word, index) => {\r\n              return (\r\n                <li key={index} className=\"word_item\">\r\n                    <h4 id=\"name-title\">{word.original}</h4>\r\n                  <p>Correct: {word.correct_count}</p>\r\n                  <p>Incorrect: {word.incorrect_count}</p>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </section>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardRoute;","import React from 'react';\r\nimport Button from '../Button/Button';\r\nimport './Results.css'\r\n\r\nclass Results extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        let resultRender = <p className=\"results-p\">Correct!</p>;\r\n        if (!this.props.isCorrect) {\r\n            resultRender = <p className=\"results-p\">Incorrect :(</p>;\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"DisplayFeedback\">\r\n                <p >The correct translation for <span className='word-strong'>{this.props.original}</span> was <span className='word-strong'>{this.props.answer}</span> and you chose <span className='word-strong'>{this.props.guess}</span>!</p>\r\n                <Button className='nextword-button' onClick={this.props.onNextWordClick}>\r\n                    Try another word!\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Results;","import React, { Component } from 'react';\r\nimport LanguageApiService from '../../services/language-service';\r\nimport { Input, Required, Label } from '../../components/Form/Form';\r\nimport Results from '../../components/Results/Results';\r\nimport languageContext from '../../contexts/languageContext';\r\nimport './LearningRoute.css'\r\nvar msg = new SpeechSynthesisUtterance();\r\nmsg.text = \"bien y tu como estas\";\r\n\r\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\nconst recognition = new SpeechRecognition();\r\n\r\nrecognition.lang = 'en-US';\r\n\r\nclass LearningRoute extends Component {\r\n  static contextType = languageContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nextWord: null,\r\n      totalScore: null,\r\n      wordIncorrectCount: null,\r\n      wordCorrectCount: null,\r\n      answer: null,\r\n      isCorrect: null,\r\n      guessBool: false,\r\n      loading: true,\r\n      guessTerm: '',\r\n      speechBool: false,\r\n      listening: false,\r\n    };\r\n  }\r\n\r\n  handleSpeech = () => {\r\n    this.setState({\r\n      guessTerm: '',\r\n      listening: true,\r\n    })\r\n\r\n    recognition.start();\r\n\r\n    recognition.onresult = (e) => {\r\n      let current = e.resultIndex;\r\n\r\n      let transcript = e.results[current][0].transcript;\r\n\r\n      this.setState({\r\n        guessTerm: transcript.toLowerCase(),\r\n        listening: false,\r\n      })\r\n\r\n    }\r\n  };\r\n\r\n  handleSendGuess = (e) => {\r\n    e.preventDefault();\r\n    const guess = this.state.guessTerm;\r\n    const guessBody = {\r\n      guess\r\n    }\r\n\r\n    LanguageApiService.postGuess(guessBody)\r\n      .then(summary => {\r\n        let newCorrectScore = this.state.wordCorrectCount;\r\n        let newIncorrectScore = this.state.wordIncorrectCount;\r\n        if (summary.isCorrect) {\r\n          newCorrectScore++;\r\n        } else {\r\n          newIncorrectScore++;\r\n        }\r\n        this.setState({\r\n          totalScore: summary.totalScore,\r\n          wordIncorrect: newIncorrectScore,\r\n          wordCorrect: newCorrectScore,\r\n          answer: summary.answer,\r\n          isCorrect: summary.isCorrect,\r\n          guessBool: true\r\n        })\r\n      })\r\n\r\n  }\r\n\r\n\r\n\r\n  setAnswer = (val) => {\r\n    this.setState({\r\n      guessTerm: val.target.value\r\n    })\r\n  }\r\n\r\n  handleNextWord = (event) => {\r\n    event.preventDefault();\r\n    LanguageApiService.getHead()\r\n      .then(head => {\r\n        this.setState({\r\n          nextWord: head.nextWord,\r\n          wordIncorrectCount: head.wordIncorrectCount,\r\n          wordCorrectCount: head.wordCorrectCount,\r\n          guessBool: false,\r\n          guessTerm: ''\r\n        })\r\n      })\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.context.language === \"\") {\r\n      LanguageApiService.getWords()\r\n        .then((res) => this.context.setLangAndWords(res))\r\n        .catch((error) => this.setState({ error: error }));\r\n    }\r\n    LanguageApiService.getHead()\r\n      .then(head => {\r\n        this.setState({\r\n          nextWord: head.nextWord,\r\n          wordIncorrectCount: head.wordIncorrectCount,\r\n          wordCorrectCount: head.wordCorrectCount,\r\n          totalScore: head.totalScore,\r\n          loading: false,\r\n          guessTerm: ''\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    let headerText = 'Translate the word:'\r\n    if (this.state.isCorrect && this.state.guessBool) {\r\n      headerText = 'You were correct! :D'\r\n    }\r\n    if (!this.state.isCorrect && this.state.guessBool) {\r\n      headerText = 'Good try, but not quite right :('\r\n    }\r\n\r\n    return (\r\n      <section className=\"learning-container\">\r\n        {!this.state.loading && <><h2>{headerText}</h2><span className='word-translate'>{this.state.nextWord}{''}</span></>}\r\n        <form id=\"learning-form\" onSubmit={this.handleSendGuess}>\r\n\r\n          {!this.state.guessBool && <><Label htmlFor='learn-guess-input' className=\"text-center\">\r\n            What's the translation for this word?\r\n          </Label></>}\r\n\r\n          {!this.state.guessBool && <Input\r\n            id='learn-guess-input'\r\n            name='answer'\r\n            className=\"center\"\r\n            value={this.state.guessTerm}\r\n            required\r\n            onChange={e => this.setAnswer(e)}\r\n          />}\r\n\r\n          {this.state.listening && <p>Listening...</p>}\r\n\r\n          {!this.state.guessBool && <button className=\"guess-submit\" type=\"submit\">\r\n            Submit your answer\r\n          </button>}\r\n          \r\n          <div className=\"results-container center DisplayScore\">\r\n            <p className='results-p'>Your total score is: {this.state.totalScore}</p>\r\n          </div>\r\n          {this.state.guessBool && <Results\r\n            isCorrect={this.state.isCorrect}\r\n            totalScore={this.state.totalScore}\r\n            guess={this.state.guessTerm}\r\n            answer={this.state.answer}\r\n            original={this.state.nextWord}\r\n            onNextWordClick={this.handleNextWord} />}\r\n\r\n        </form>\r\n\r\n        <div className=\"results-container center\">\r\n          <p>You have answered this word correctly {this.state.wordCorrectCount} times.</p>\r\n          <p>You have answered this word incorrectly {this.state.wordIncorrectCount} times.</p>\r\n        </div>\r\n\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LearningRoute;","import React, { Component } from 'react'\r\n\r\nclass NotFoundRoute extends Component {\r\n  render() {\r\n    return (\r\n      <section>\r\n        <h2>404 - Page not found</h2>\r\n        <p>Try going back to your previous page.</p>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFoundRoute\r\n","import React, { Component } from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Header from '../Header/Header'\r\nimport PrivateRoute from '../PrivateRoute/PrivateRoute'\r\nimport PublicOnlyRoute from '../PublicOnlyRoute/PublicOnlyRoute'\r\nimport RegistrationRoute from '../../routes/RegistrationRoute/RegistrationRoute'\r\nimport LoginRoute from '../../routes/LoginRoute/LoginRoute'\r\nimport DashboardRoute from '../../routes/DashboardRoute/DashboardRoute'\r\nimport LearningRoute from '../../routes/LearningRoute/LearningRoute'\r\nimport NotFoundRoute from '../../routes/NotFoundRoute/NotFoundRoute'\r\nimport './App.css'\r\nimport languageContext from '../../contexts/languageContext'\r\nimport LanguageService from '../../services/language-service'\r\nimport TokenService from '../../services/token-service'\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    hasError: false,\r\n    language: \"\",\r\n    words: [],\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    console.error(error)\r\n    return { hasError: true }\r\n  }\r\n\r\n  static contextType = languageContext;\r\n\r\n  setLangAndWords = (res) => {\r\n    this.setState({\r\n      language: res.language,\r\n      words: res.words\r\n    })\r\n  };\r\n\r\n  render() {\r\n\r\n    if (TokenService.hasAuthToken() && this.state.language === \"\") {\r\n      LanguageService.getWords()\r\n        .then((res) => this.state.setLangAndWords(res))\r\n        .catch((error) => this.setState({ error: error }));\r\n    }\r\n    const value = {\r\n      language: this.state.language,\r\n      words: this.state.words,\r\n      setLangAndWords: this.setLangAndWords,\r\n\r\n    };\r\n\r\n    const { hasError } = this.state\r\n    return (\r\n      <div className='App'>\r\n        <languageContext.Provider value={value}>\r\n\r\n          <Header />\r\n          <main>\r\n            {hasError && (\r\n              <p>There was an error! Oh no!</p>\r\n            )}\r\n            <Switch>\r\n              <PrivateRoute\r\n                exact\r\n                path={'/'}\r\n                component={DashboardRoute}\r\n              />\r\n              <PrivateRoute\r\n                path={'/learn'}\r\n                component={LearningRoute}\r\n              />\r\n              <PublicOnlyRoute\r\n                path={'/register'}\r\n                component={RegistrationRoute}\r\n              />\r\n              <PublicOnlyRoute\r\n                path={'/login'}\r\n                component={LoginRoute}\r\n              />\r\n              <Route\r\n                component={NotFoundRoute}\r\n              />\r\n            </Switch>\r\n          </main>\r\n      \r\n        </languageContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'unfetch/polyfill'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { UserProvider } from './contexts/UserContext'\r\nimport App from './components/App/App'\r\nimport './setup-icons'\r\nimport './index.css'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <UserProvider>\r\n      <App />\r\n    </UserProvider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root'),\r\n)\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}